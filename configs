{
    "EncodedData": "W3siZmxhZyI6ImRlIiwiZGF0YSI6InZsZXNzOlwvXC83Yzk0YmVhZC1kMTc2LTQ0YjUtODNhOS05N2Q4MzdlNDgyN2FAd3d3LnNwZWVkdGVzdC5uZXQ6ODA/dHlwZT13cyZwYXRoPSUyRiUzRmVkJTNEMjA0OCZob3N0PXd3dy5zcGVlZHRlc3QubmV0LmlyLkNvbS5TaXRlLnhuLS1maHEwbGE0NDdhYWM1NTA0ZGVhNzAxYXhyMWcuZzEua29yZGEuU0JTLiZzZWN1cml0eT1ub25lI2cxIn0seyJmbGFnIjoiZGUiLCJkYXRhIjoie1xyXG4gIFwicmVtYXJrc1wiOiBcImcxIGZyYWdtZW50XCIsXHJcbiAgXCJsb2dcIjoge1xyXG4gICAgXCJhY2Nlc3NcIjogXCJcIixcclxuICAgIFwiZXJyb3JcIjogXCJcIixcclxuICAgIFwibG9nbGV2ZWxcIjogXCJ3YXJuaW5nXCJcclxuICB9LFxyXG4gIFwiaW5ib3VuZHNcIjogW1xyXG4gICAge1xyXG4gICAgICBcInRhZ1wiOiBcInNvY2tzXCIsXHJcbiAgICAgIFwicG9ydFwiOiAxMDgwOCxcclxuICAgICAgXCJsaXN0ZW5cIjogXCIxMjcuMC4wLjFcIixcclxuICAgICAgXCJwcm90b2NvbFwiOiBcInNvY2tzXCIsXHJcbiAgICAgIFwic25pZmZpbmdcIjoge1xyXG4gICAgICAgIFwiZW5hYmxlZFwiOiB0cnVlLFxyXG4gICAgICAgIFwiZGVzdE92ZXJyaWRlXCI6IFtcclxuICAgICAgICAgIFwiaHR0cFwiLFxyXG4gICAgICAgICAgXCJ0bHNcIlxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgXCJyb3V0ZU9ubHlcIjogZmFsc2VcclxuICAgICAgfSxcclxuICAgICAgXCJzZXR0aW5nc1wiOiB7XHJcbiAgICAgICAgXCJhdXRoXCI6IFwibm9hdXRoXCIsXHJcbiAgICAgICAgXCJ1ZHBcIjogdHJ1ZSxcclxuICAgICAgICBcImFsbG93VHJhbnNwYXJlbnRcIjogZmFsc2VcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgXCJ0YWdcIjogXCJodHRwXCIsXHJcbiAgICAgIFwicG9ydFwiOiAxMDgwOSxcclxuICAgICAgXCJsaXN0ZW5cIjogXCIxMjcuMC4wLjFcIixcclxuICAgICAgXCJwcm90b2NvbFwiOiBcImh0dHBcIixcclxuICAgICAgXCJzbmlmZmluZ1wiOiB7XHJcbiAgICAgICAgXCJlbmFibGVkXCI6IHRydWUsXHJcbiAgICAgICAgXCJkZXN0T3ZlcnJpZGVcIjogW1xyXG4gICAgICAgICAgXCJodHRwXCIsXHJcbiAgICAgICAgICBcInRsc1wiXHJcbiAgICAgICAgXSxcclxuICAgICAgICBcInJvdXRlT25seVwiOiBmYWxzZVxyXG4gICAgICB9LFxyXG4gICAgICBcInNldHRpbmdzXCI6IHtcclxuICAgICAgICBcImF1dGhcIjogXCJub2F1dGhcIixcclxuICAgICAgICBcInVkcFwiOiB0cnVlLFxyXG4gICAgICAgIFwiYWxsb3dUcmFuc3BhcmVudFwiOiBmYWxzZVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgXSxcclxuICBcIm91dGJvdW5kc1wiOiBbXHJcbiAgICB7XHJcbiAgICAgIFwidGFnXCI6IFwicHJveHlcIixcclxuICAgICAgXCJwcm90b2NvbFwiOiBcInZsZXNzXCIsXHJcbiAgICAgIFwic2V0dGluZ3NcIjoge1xyXG4gICAgICAgIFwidm5leHRcIjogW1xyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICBcImFkZHJlc3NcIjogXCJ3d3cuc3BlZWR0ZXN0Lm5ldFwiLFxyXG4gICAgICAgICAgICBcInBvcnRcIjogODAsXHJcbiAgICAgICAgICAgIFwidXNlcnNcIjogW1xyXG4gICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFwiaWRcIjogXCI3Yzk0YmVhZC1kMTc2LTQ0YjUtODNhOS05N2Q4MzdlNDgyN2FcIixcclxuICAgICAgICAgICAgICAgIFwiYWx0ZXJJZFwiOiAwLFxyXG4gICAgICAgICAgICAgICAgXCJlbWFpbFwiOiBcInRAdC50dFwiLFxyXG4gICAgICAgICAgICAgICAgXCJzZWN1cml0eVwiOiBcImF1dG9cIixcclxuICAgICAgICAgICAgICAgIFwiZW5jcnlwdGlvblwiOiBcIm5vbmVcIixcclxuICAgICAgICAgICAgICAgIFwiZmxvd1wiOiBcIlwiXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgICB9LFxyXG4gICAgICBcInN0cmVhbVNldHRpbmdzXCI6IHtcclxuICAgICAgICBcIm5ldHdvcmtcIjogXCJ3c1wiLFxyXG4gICAgICAgIFwid3NTZXR0aW5nc1wiOiB7XHJcbiAgICAgICAgICBcInBhdGhcIjogXCJcLz9lZD0yNTYwXCIsXHJcbiAgICAgICAgICBcImhlYWRlcnNcIjoge1xyXG4gICAgICAgICAgICBcIkhvc3RcIjogXCJ3d3cuU3BlRUR0RXN0Lm5ldC5Jci5jb20uU0lUZS5Ybi0tZmhRMExBNDQ3YWFjNTUwNGRFQTcwMWFYcjFnLkcxLktPUkRBLlNiUy5cIlxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgXCJzb2Nrb3B0XCI6IHtcclxuICAgICAgICAgIFwiZGlhbGVyUHJveHlcIjogXCJmcmFnbWVudFwiLFxyXG4gICAgICAgICAgXCJ0Y3BLZWVwQWxpdmVJZGxlXCI6IDEwMCxcclxuICAgICAgICAgIFwibWFya1wiOiAyNTUsXHJcbiAgICAgICAgICBcInRjcE5vRGVsYXlcIjogdHJ1ZVxyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAgXCJtdXhcIjoge1xyXG4gICAgICAgIFwiZW5hYmxlZFwiOiB0cnVlLFxyXG4gICAgICAgIFwiY29uY3VycmVuY3lcIjogOCxcclxuICAgICAgICBcInh1ZHBDb25jdXJyZW5jeVwiOiA4LFxyXG4gICAgICAgIFwieHVkcFByb3h5VURQNDQzXCI6IFwicmVqZWN0XCJcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgXCJ0YWdcIjogXCJmcmFnbWVudFwiLFxyXG4gICAgICBcInByb3RvY29sXCI6IFwiZnJlZWRvbVwiLFxyXG4gICAgICBcInNldHRpbmdzXCI6IHtcclxuICAgICAgICBcImRvbWFpblN0cmF0ZWd5XCI6IFwiQXNJc1wiLFxyXG4gICAgICAgIFwiZnJhZ21lbnRcIjoge1xyXG4gICAgICAgICAgXCJwYWNrZXRzXCI6IFwiMS0xXCIsXHJcbiAgICAgICAgICBcImxlbmd0aFwiOiBcIjEtM1wiLFxyXG4gICAgICAgICAgXCJpbnRlcnZhbFwiOiBcIjVcIlxyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAgXCJzdHJlYW1TZXR0aW5nc1wiOiB7XHJcbiAgICAgICAgXCJzb2Nrb3B0XCI6IHtcclxuICAgICAgICAgIFwidGNwTm9EZWxheVwiOiB0cnVlLFxyXG4gICAgICAgICAgXCJ0Y3BLZWVwQWxpdmVJZGxlXCI6IDEwMFxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgXCJ0YWdcIjogXCJkaXJlY3RcIixcclxuICAgICAgXCJwcm90b2NvbFwiOiBcImZyZWVkb21cIixcclxuICAgICAgXCJzZXR0aW5nc1wiOiB7fVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgXCJ0YWdcIjogXCJibG9ja1wiLFxyXG4gICAgICBcInByb3RvY29sXCI6IFwiYmxhY2tob2xlXCIsXHJcbiAgICAgIFwic2V0dGluZ3NcIjoge1xyXG4gICAgICAgIFwicmVzcG9uc2VcIjoge1xyXG4gICAgICAgICAgXCJ0eXBlXCI6IFwiaHR0cFwiXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgXSxcclxuICBcInJvdXRpbmdcIjoge1xyXG4gICAgXCJkb21haW5TdHJhdGVneVwiOiBcIkFzSXNcIixcclxuICAgIFwicnVsZXNcIjogW1xyXG4gICAgICB7XHJcbiAgICAgICAgXCJ0eXBlXCI6IFwiZmllbGRcIixcclxuICAgICAgICBcImluYm91bmRUYWdcIjogW1xyXG4gICAgICAgICAgXCJhcGlcIlxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgXCJvdXRib3VuZFRhZ1wiOiBcImFwaVwiLFxyXG4gICAgICAgIFwiZW5hYmxlZFwiOiB0cnVlXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBcImlkXCI6IFwiNTYyNzc4NTY1OTY1NTc5OTc1OVwiLFxyXG4gICAgICAgIFwidHlwZVwiOiBcImZpZWxkXCIsXHJcbiAgICAgICAgXCJwb3J0XCI6IFwiMC02NTUzNVwiLFxyXG4gICAgICAgIFwib3V0Ym91bmRUYWdcIjogXCJwcm94eVwiLFxyXG4gICAgICAgIFwiZW5hYmxlZFwiOiB0cnVlXHJcbiAgICAgIH1cclxuICAgIF1cclxuICB9XHJcbn0ifSx7ImZsYWciOiJmciIsImRhdGEiOiJ0cm9qYW46XC9cL3RlbGVncmFtLWlkLXByaXZhdGV2cG5zQDEzLjM4LjE3MC4xNzg6MjIyMjI/c2VjdXJpdHk9dGxzJmFscG49aHR0cFwvMS4xJmhlYWRlclR5cGU9bm9uZSZ0eXBlPXRjcCZzbmk9dHJvamFuLmJ1cmdlcmlwLmNvLnVrIyhTMTE2KVx1ZDgzY1x1ZGRlOFx1ZDgzY1x1ZGRmNXQubWVcL1ByaXZhdGVWUE5zXHJcblxyXG50cm9qYW46XC9cL3RlbGVncmFtLWlkLXByaXZhdGV2cG5zQDE1LjIzNi4xMjcuMTU0OjIyMjIyP3NlY3VyaXR5PXRscyZhbHBuPWh0dHBcLzEuMSZoZWFkZXJUeXBlPW5vbmUmdHlwZT10Y3Amc25pPXRyb2phbi5idXJnZXJpcC5jby51ayMoUzExNSlcdWQ4M2NcdWRkZThcdWQ4M2NcdWRkZjV0Lm1lXC9Qcml2YXRlVlBOcyJ9LHsiZmxhZyI6ImZyIiwiZGF0YSI6InZsZXNzOlwvXC80ZmJkNDcyOS01ZWZiLTQ2MTItOTZhNi1kZWI2NDhmMWU0YTFAd3d3LnNwZWVkdGVzdC5uZXQ6ODA/dHlwZT13cyZwYXRoPSUyRiUzRmVkJTNEMjA0OCZob3N0PXd3dy5zcGVlZHRlc3QubmV0LmlyLkNvbS5TaXRlLnhuLS1maHEwbGE0NDdhYWM1NTA0ZGVhNzAxYXhyMWcuZjEua29yZGEuUElDUy4mc2VjdXJpdHk9bm9uZSNmMSJ9LHsiZmxhZyI6ImRlIiwiZGF0YSI6InRyb2phbjpcL1wvdGVsZWdyYW0taWQtcHJpdmF0ZXZwbnNAMy4xMjQuNTMuMTE3OjIyMjIyP3NlY3VyaXR5PXRscyZhbHBuPWh0dHBcLzEuMSZoZWFkZXJUeXBlPW5vbmUmdHlwZT10Y3Amc25pPXRyb2phbi5idXJnZXJpcC5jby51ayMoUzExNClcdWQ4M2NcdWRkZTlcdWQ4M2NcdWRkZWF0Lm1lXC9Qcml2YXRlVlBOc1xyXG5cclxudHJvamFuOlwvXC90ZWxlZ3JhbS1pZC1wcml2YXRldnBuc0AzLjc0LjExMi4yNTQ6MjIyMjI/c2VjdXJpdHk9dGxzJmFscG49aHR0cFwvMS4xJmhlYWRlclR5cGU9bm9uZSZ0eXBlPXRjcCZzbmk9dHJvamFuLmJ1cmdlcmlwLmNvLnVrIyhTMTEzKVx1ZDgzY1x1ZGRlOVx1ZDgzY1x1ZGRlYXQubWVcL1ByaXZhdGVWUE5zIn0seyJmbGFnIjoic3ciLCJkYXRhIjoidHJvamFuOlwvXC90ZWxlZ3JhbS1pZC1wcml2YXRldnBuc0AxNi4xNi4xNjMuMTUyOjIyMjIyP3NlY3VyaXR5PXRscyZhbHBuPWh0dHBcLzEuMSZoZWFkZXJUeXBlPW5vbmUmdHlwZT10Y3Amc25pPXRyb2phbi5idXJnZXJpcC5jby51ayMoUzExMSlcdWQ4M2NcdWRkZjhcdWQ4M2NcdWRkZWF0Lm1lXC9Qcml2YXRlVlBOc1xyXG5cclxudHJvamFuOlwvXC90ZWxlZ3JhbS1pZC1wcml2YXRldnBuc0AxMy40OC4xMjUuMTIzOjIyMjIyP3NlY3VyaXR5PXRscyZhbHBuPWh0dHBcLzEuMSZoZWFkZXJUeXBlPW5vbmUmdHlwZT10Y3Amc25pPXRyb2phbi5idXJnZXJpcC5jby51ayMoUzExMilcdWQ4M2NcdWRkZjhcdWQ4M2NcdWRkZWF0Lm1lXC9Qcml2YXRlVlBOcyJ9XQ=="
}
