{
    "EncodedData": "[{"flag":"fr","data":"vless:\/\/ffde0246-d036-45df-b112-f6f42eaf127b@www.speedtest.net:80?type=ws&path=%2F%3Fed%3D2048&host=www.speedtest.net.ir.Com.Site.xn--fhq0la447aac5504dea701axr1g.f2.korda.SKIN.&security=none#f2"},{"flag":"us","data":"vless:\/\/e3c31e6a-f118-4e9f-9cc6-a49e5c51647e@www.speedtest.net:80?type=ws&path=%2F%3Fed%3D2048&host=www.speedtest.net.ftp.debian.org.xn--ihqvlaa157dbvciyg50okggl0r2f5bcj1a.u1.korda.WORLD.&security=none#u1\r\n\r\nvless:\/\/ddcd3e4d-0b21-4d4b-80e8-46f4dad09286@www.speedtest.net:80?type=ws&path=%2F%3Fed%3D2048&host=www.speedtest.net.ir.Com.Site.xn--fhq0la447aac5504dea701axr1g.u2.korda.LIFE.&security=none#u2"},{"flag":"us","data":"{\r\n  \"remarks\": \"u1 fragment\",\r\n  \"log\": {\r\n    \"access\": \"\",\r\n    \"error\": \"\",\r\n    \"loglevel\": \"warning\"\r\n  },\r\n  \"inbounds\": [\r\n    {\r\n      \"tag\": \"socks\",\r\n      \"port\": 10808,\r\n      \"listen\": \"127.0.0.1\",\r\n      \"protocol\": \"socks\",\r\n      \"sniffing\": {\r\n        \"enabled\": true,\r\n        \"destOverride\": [\r\n          \"http\",\r\n          \"tls\"\r\n        ],\r\n        \"routeOnly\": false\r\n      },\r\n      \"settings\": {\r\n        \"auth\": \"noauth\",\r\n        \"udp\": true,\r\n        \"allowTransparent\": false\r\n      }\r\n    },\r\n    {\r\n      \"tag\": \"http\",\r\n      \"port\": 10809,\r\n      \"listen\": \"127.0.0.1\",\r\n      \"protocol\": \"http\",\r\n      \"sniffing\": {\r\n        \"enabled\": true,\r\n        \"destOverride\": [\r\n          \"http\",\r\n          \"tls\"\r\n        ],\r\n        \"routeOnly\": false\r\n      },\r\n      \"settings\": {\r\n        \"auth\": \"noauth\",\r\n        \"udp\": true,\r\n        \"allowTransparent\": false\r\n      }\r\n    }\r\n  ],\r\n  \"outbounds\": [\r\n    {\r\n      \"tag\": \"proxy\",\r\n      \"protocol\": \"vless\",\r\n      \"settings\": {\r\n        \"vnext\": [\r\n          {\r\n            \"address\": \"www.speedtest.net\",\r\n            \"port\": 80,\r\n            \"users\": [\r\n              {\r\n                \"id\": \"e3c31e6a-f118-4e9f-9cc6-a49e5c51647e\",\r\n                \"alterId\": 0,\r\n                \"email\": \"t@t.tt\",\r\n                \"security\": \"auto\",\r\n                \"encryption\": \"none\",\r\n                \"flow\": \"\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      \"streamSettings\": {\r\n        \"network\": \"ws\",\r\n        \"wsSettings\": {\r\n          \"path\": \"\/?ed=2560\",\r\n          \"headers\": {\r\n            \"Host\": \"WwW.sPeeDteST.NeT.ftp.dEbiAN.ORg.Xn--ihQVlaa157DBVCiYG50oKgGL0r2f5bcj1a.u1.KOrDA.woRLD.\"\r\n          }\r\n        },\r\n        \"sockopt\": {\r\n          \"dialerProxy\": \"fragment\",\r\n          \"tcpKeepAliveIdle\": 100,\r\n          \"mark\": 255,\r\n          \"tcpNoDelay\": true\r\n        }\r\n      },\r\n      \"mux\": {\r\n        \"enabled\": true,\r\n        \"concurrency\": 8,\r\n        \"xudpConcurrency\": 8,\r\n        \"xudpProxyUDP443\": \"reject\"\r\n      }\r\n    },\r\n    {\r\n      \"tag\": \"fragment\",\r\n      \"protocol\": \"freedom\",\r\n      \"settings\": {\r\n        \"domainStrategy\": \"AsIs\",\r\n        \"fragment\": {\r\n          \"packets\": \"1-1\",\r\n          \"length\": \"1-3\",\r\n          \"interval\": \"5\"\r\n        }\r\n      },\r\n      \"streamSettings\": {\r\n        \"sockopt\": {\r\n          \"tcpNoDelay\": true,\r\n          \"tcpKeepAliveIdle\": 100\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"tag\": \"direct\",\r\n      \"protocol\": \"freedom\",\r\n      \"settings\": {}\r\n    },\r\n    {\r\n      \"tag\": \"block\",\r\n      \"protocol\": \"blackhole\",\r\n      \"settings\": {\r\n        \"response\": {\r\n          \"type\": \"http\"\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"routing\": {\r\n    \"domainStrategy\": \"AsIs\",\r\n    \"rules\": [\r\n      {\r\n        \"type\": \"field\",\r\n        \"inboundTag\": [\r\n          \"api\"\r\n        ],\r\n        \"outboundTag\": \"api\",\r\n        \"enabled\": true\r\n      },\r\n      {\r\n        \"id\": \"5627785659655799759\",\r\n        \"type\": \"field\",\r\n        \"port\": \"0-65535\",\r\n        \"outboundTag\": \"proxy\",\r\n        \"enabled\": true\r\n      }\r\n    ]\r\n  }\r\n}"},{"flag":"ca","data":"vless:\/\/c816d9b3-1960-4e73-aaae-72acd12f3923@live.wkrq.com:443?path=%40%55nlimitedDev----%40%55nlimitedDev-----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev%3Fed&security=tls&encryption=none=\/@mehrosaboran,--@mehrosaboran,--@mehrosaboran,--@mehrosaboran,--@mehrosaboran,--@mehrosaboran,--@mehrosaboran&host=UNLIMITEDDEV.zr.ir&fp=firefox&type=ws&sni=live.wkrq.com#%40mehrosaboran\r\n\r\nvless:\/\/1564a10f-86eb-4ad3-8c43-6343abc36cd8@104.17.234.114:443?path=%2F%40%55nlimitedDev----%40%55nlimitedDev-----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev----%40%55nlimitedDev%3Fed%3D8080&security=tls&encryption=none=\/@mehrosaboran,--@mehrosaboran,--@mehrosaboran,--@mehrosaboran,--@mehrosaboran,--@mehrosaboran,--@mehrosaboran&host=UNLIMITEDDEV.unlimiteddev-vpn.com&fp=chrome&type=ws&sni=UNLIMITEDDEV.unlimiteddev-vpn.com#%40mehrosaboran\r\n\r\nvless:\/\/89b3cbba-e6ac-485a-9481-976a0415eab9@mahdiserver-94t.pages.dev:443?path=%2F%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%3Fed%3D2560&security=tls&encryption=none&alpn=h2,http\/1.1&host=mAHdIserVer-94t.pagEs.Dev&fp=randomized&type=ws&sni=MahDIseRVER-94T.pAGes.DEv#%40mehrosaboran\r\n\r\nvless:\/\/89b3cbba-e6ac-485a-9481-976a0415eab9@188.114.97.3:443?path=%2F%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%3Fed%3D2560&security=tls&encryption=none&alpn=h2,http\/1.1&host=maHdIsErvEr-94t.pAGEs.deV&fp=randomized&type=ws&sni=MahdisErvER-94T.PAgES.DEV#%40mehrosaboran\r\n\r\nvless:\/\/89b3cbba-e6ac-485a-9481-976a0415eab9@www.speedtest.net:2053?path=%2F%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%3Fed%3D2560&security=tls&encryption=none&alpn=h2,http\/1.1&host=MahdISERVeR-94t.PAgEs.DeV&fp=randomized&type=ws&sni=mAHdIsERVer-94t.pAGEs.dev#%40mehrosaboran\r\n\r\nvless:\/\/89b3cbba-e6ac-485a-9481-976a0415eab9@104.24.55.174:2053?path=%2F%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%2C--%40mehrosaboran%3Fed%3D2560&security=tls&encryption=none&alpn=h2,http\/1.1&host=MahdISERVeR-94t.PAgEs.DeV&fp=randomized&type=ws&sni=mAHdIsERVer-94t.pAGEs.dev#%40mehrosaboran"},{"flag":"nl","data":"vless:\/\/105c7a94-ddd4-4025-bf6f-5be4fc657354@172.66.47.74:443?path=%2FTelegram-%40V2ray_Alpha%2F%3Fed%3D2560&security=tls&encryption=none&alpn=h2,http\/1.1&host=ShAh-9aQ.PaGEs.DEV&fp=randomized&type=ws&sni=SHAh-9Aq.PAGes.deV#%40proxycityiran\r\n\r\nvless:\/\/e6e82501-ecd1-4cb5-f8a1-3319fe8e0f14@185.146.173.52:8880?path=%2Fnazan%2Fpedar%2Fsag&security=none&encryption=none&host=splUs.Ir.DigIcYBer.CLIck.&type=httpupgrade#%40proxycityiran\r\n\r\nvless:\/\/101d796b-8ee8-452a-ec5e-0d42423deff8@speedtest.net:443?path=%2F%40melov2ray%2Fws%3Fed%3D2048&security=tls&encryption=none&alpn=h2,http\/1.1&host=melofin.ir&fp=firefox&type=ws&sni=speedtest.net#%40proxycityiran\r\n\r\nvless:\/\/f408be69-bc3a-4a4f-e6e3-5dfbdf79adae@www.speedtest.net:8880?path=%2Fmelo%2F&security=none&encryption=none&host=ch.%E6%88%91%E7%9A%84%E5%90%8D%E5%AD%97%E4%BC%8A%E6%96%AF%E6%A2%85%E6%B4%9B.site.&type=ws#%40proxycityiran"},{"flag":"de","data":"vless:\/\/62f2f550-0210-4a53-a0d8-139b9d243a09@www.speedtest.net:80?type=ws&path=%2F%3Fed%3D2048&host=www.speedtest.net.ir.Com.Site.xn--fhq0la447aac5504dea701axr1g.g1.dailybodymind.COM.&security=none#g1\r\n\r\nvless:\/\/e574d517-6cbc-4ff0-8c8b-f4478650ffa6@www.speedtest.net:80?type=ws&path=%2F%3Fed%3D2048&host=www.speedtest.net.ftp.debian.org.xn--ihqvlaa157dbvciyg50okggl0r2f5bcj1a.g2.korda.AUTOS.&security=none#g2"},{"flag":"de","data":"{\r\n  \"remarks\": \"g1 fragment\",\r\n  \"log\": {\r\n    \"access\": \"\",\r\n    \"error\": \"\",\r\n    \"loglevel\": \"warning\"\r\n  },\r\n  \"inbounds\": [\r\n    {\r\n      \"tag\": \"socks\",\r\n      \"port\": 10808,\r\n      \"listen\": \"127.0.0.1\",\r\n      \"protocol\": \"socks\",\r\n      \"sniffing\": {\r\n        \"enabled\": true,\r\n        \"destOverride\": [\r\n          \"http\",\r\n          \"tls\"\r\n        ],\r\n        \"routeOnly\": false\r\n      },\r\n      \"settings\": {\r\n        \"auth\": \"noauth\",\r\n        \"udp\": true,\r\n        \"allowTransparent\": false\r\n      }\r\n    },\r\n    {\r\n      \"tag\": \"http\",\r\n      \"port\": 10809,\r\n      \"listen\": \"127.0.0.1\",\r\n      \"protocol\": \"http\",\r\n      \"sniffing\": {\r\n        \"enabled\": true,\r\n        \"destOverride\": [\r\n          \"http\",\r\n          \"tls\"\r\n        ],\r\n        \"routeOnly\": false\r\n      },\r\n      \"settings\": {\r\n        \"auth\": \"noauth\",\r\n        \"udp\": true,\r\n        \"allowTransparent\": false\r\n      }\r\n    }\r\n  ],\r\n  \"outbounds\": [\r\n    {\r\n      \"tag\": \"proxy\",\r\n      \"protocol\": \"vless\",\r\n      \"settings\": {\r\n        \"vnext\": [\r\n          {\r\n            \"address\": \"www.speedtest.net\",\r\n            \"port\": 80,\r\n            \"users\": [\r\n              {\r\n                \"id\": \"62f2f550-0210-4a53-a0d8-139b9d243a09\",\r\n                \"alterId\": 0,\r\n                \"email\": \"t@t.tt\",\r\n                \"security\": \"auto\",\r\n                \"encryption\": \"none\",\r\n                \"flow\": \"\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      \"streamSettings\": {\r\n        \"network\": \"ws\",\r\n        \"wsSettings\": {\r\n          \"path\": \"\/?ed=2560\",\r\n          \"headers\": {\r\n            \"Host\": \"WWw.spEedtesT.Net.Ir.COm.SItE.Xn--fHQ0lA447aAc5504deA701aXR1g.g1.dAiLyBODymInD.coM.\"\r\n          }\r\n        },\r\n        \"sockopt\": {\r\n          \"dialerProxy\": \"fragment\",\r\n          \"tcpKeepAliveIdle\": 100,\r\n          \"mark\": 255,\r\n          \"tcpNoDelay\": true\r\n        }\r\n      },\r\n      \"mux\": {\r\n        \"enabled\": true,\r\n        \"concurrency\": 8,\r\n        \"xudpConcurrency\": 8,\r\n        \"xudpProxyUDP443\": \"reject\"\r\n      }\r\n    },\r\n    {\r\n      \"tag\": \"fragment\",\r\n      \"protocol\": \"freedom\",\r\n      \"settings\": {\r\n        \"domainStrategy\": \"AsIs\",\r\n        \"fragment\": {\r\n          \"packets\": \"1-1\",\r\n          \"length\": \"1-3\",\r\n          \"interval\": \"5\"\r\n        }\r\n      },\r\n      \"streamSettings\": {\r\n        \"sockopt\": {\r\n          \"tcpNoDelay\": true,\r\n          \"tcpKeepAliveIdle\": 100\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"tag\": \"direct\",\r\n      \"protocol\": \"freedom\",\r\n      \"settings\": {}\r\n    },\r\n    {\r\n      \"tag\": \"block\",\r\n      \"protocol\": \"blackhole\",\r\n      \"settings\": {\r\n        \"response\": {\r\n          \"type\": \"http\"\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"routing\": {\r\n    \"domainStrategy\": \"AsIs\",\r\n    \"rules\": [\r\n      {\r\n        \"type\": \"field\",\r\n        \"inboundTag\": [\r\n          \"api\"\r\n        ],\r\n        \"outboundTag\": \"api\",\r\n        \"enabled\": true\r\n      },\r\n      {\r\n        \"id\": \"5627785659655799759\",\r\n        \"type\": \"field\",\r\n        \"port\": \"0-65535\",\r\n        \"outboundTag\": \"proxy\",\r\n        \"enabled\": true\r\n      }\r\n    ]\r\n  }\r\n}"}]"
}
