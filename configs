{
    "EncodedData": "W3siZmxhZyI6ImRlIiwiZGF0YSI6InZsZXNzOlwvXC83Yzk0YmVhZC1kMTc2LTQ0YjUtODNhOS05N2Q4MzdlNDgyN2FAd3d3LnNwZWVkdGVzdC5uZXQ6ODA/dHlwZT13cyZwYXRoPSUyRiUzRmVkJTNEMjA0OCZob3N0PXd3dy5zcGVlZHRlc3QubmV0LmlyLkNvbS5TaXRlLnhuLS1maHEwbGE0NDdhYWM1NTA0ZGVhNzAxYXhyMWcuZzEua29yZGEuU0JTLiZzZWN1cml0eT1ub25lI2cxXHJcblxyXG52bGVzczpcL1wvYmM0MzQ3NGItODUwMC00OGU2LWIzMzktZjNiYjg3YWViNjZkQHd3dy5zcGVlZHRlc3QubmV0OjgwP3R5cGU9d3MmcGF0aD0lMkYlM0ZlZCUzRDIwNDgmaG9zdD13d3cuc3BlZWR0ZXN0Lm5ldC5pci5Db20uU2l0ZS54bi0tZmhxMGxhNDQ3YWFjNTUwNGRlYTcwMWF4cjFnLmcyLmthbmRpLkZVTi4mc2VjdXJpdHk9bm9uZSNnMiJ9LHsiZmxhZyI6ImRlIiwiZGF0YSI6IntcclxuICBcInJlbWFya3NcIjogXCJnMSBmcmFnbWVudFwiLFxyXG4gIFwibG9nXCI6IHtcclxuICAgIFwiYWNjZXNzXCI6IFwiXCIsXHJcbiAgICBcImVycm9yXCI6IFwiXCIsXHJcbiAgICBcImxvZ2xldmVsXCI6IFwid2FybmluZ1wiXHJcbiAgfSxcclxuICBcImluYm91bmRzXCI6IFtcclxuICAgIHtcclxuICAgICAgXCJ0YWdcIjogXCJzb2Nrc1wiLFxyXG4gICAgICBcInBvcnRcIjogMTA4MDgsXHJcbiAgICAgIFwibGlzdGVuXCI6IFwiMTI3LjAuMC4xXCIsXHJcbiAgICAgIFwicHJvdG9jb2xcIjogXCJzb2Nrc1wiLFxyXG4gICAgICBcInNuaWZmaW5nXCI6IHtcclxuICAgICAgICBcImVuYWJsZWRcIjogdHJ1ZSxcclxuICAgICAgICBcImRlc3RPdmVycmlkZVwiOiBbXHJcbiAgICAgICAgICBcImh0dHBcIixcclxuICAgICAgICAgIFwidGxzXCJcclxuICAgICAgICBdLFxyXG4gICAgICAgIFwicm91dGVPbmx5XCI6IGZhbHNlXHJcbiAgICAgIH0sXHJcbiAgICAgIFwic2V0dGluZ3NcIjoge1xyXG4gICAgICAgIFwiYXV0aFwiOiBcIm5vYXV0aFwiLFxyXG4gICAgICAgIFwidWRwXCI6IHRydWUsXHJcbiAgICAgICAgXCJhbGxvd1RyYW5zcGFyZW50XCI6IGZhbHNlXHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIFwidGFnXCI6IFwiaHR0cFwiLFxyXG4gICAgICBcInBvcnRcIjogMTA4MDksXHJcbiAgICAgIFwibGlzdGVuXCI6IFwiMTI3LjAuMC4xXCIsXHJcbiAgICAgIFwicHJvdG9jb2xcIjogXCJodHRwXCIsXHJcbiAgICAgIFwic25pZmZpbmdcIjoge1xyXG4gICAgICAgIFwiZW5hYmxlZFwiOiB0cnVlLFxyXG4gICAgICAgIFwiZGVzdE92ZXJyaWRlXCI6IFtcclxuICAgICAgICAgIFwiaHR0cFwiLFxyXG4gICAgICAgICAgXCJ0bHNcIlxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgXCJyb3V0ZU9ubHlcIjogZmFsc2VcclxuICAgICAgfSxcclxuICAgICAgXCJzZXR0aW5nc1wiOiB7XHJcbiAgICAgICAgXCJhdXRoXCI6IFwibm9hdXRoXCIsXHJcbiAgICAgICAgXCJ1ZHBcIjogdHJ1ZSxcclxuICAgICAgICBcImFsbG93VHJhbnNwYXJlbnRcIjogZmFsc2VcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIF0sXHJcbiAgXCJvdXRib3VuZHNcIjogW1xyXG4gICAge1xyXG4gICAgICBcInRhZ1wiOiBcInByb3h5XCIsXHJcbiAgICAgIFwicHJvdG9jb2xcIjogXCJ2bGVzc1wiLFxyXG4gICAgICBcInNldHRpbmdzXCI6IHtcclxuICAgICAgICBcInZuZXh0XCI6IFtcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgXCJhZGRyZXNzXCI6IFwid3d3LnNwZWVkdGVzdC5uZXRcIixcclxuICAgICAgICAgICAgXCJwb3J0XCI6IDgwLFxyXG4gICAgICAgICAgICBcInVzZXJzXCI6IFtcclxuICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBcImlkXCI6IFwiN2M5NGJlYWQtZDE3Ni00NGI1LTgzYTktOTdkODM3ZTQ4MjdhXCIsXHJcbiAgICAgICAgICAgICAgICBcImFsdGVySWRcIjogMCxcclxuICAgICAgICAgICAgICAgIFwiZW1haWxcIjogXCJ0QHQudHRcIixcclxuICAgICAgICAgICAgICAgIFwic2VjdXJpdHlcIjogXCJhdXRvXCIsXHJcbiAgICAgICAgICAgICAgICBcImVuY3J5cHRpb25cIjogXCJub25lXCIsXHJcbiAgICAgICAgICAgICAgICBcImZsb3dcIjogXCJcIlxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgICAgfSxcclxuICAgICAgXCJzdHJlYW1TZXR0aW5nc1wiOiB7XHJcbiAgICAgICAgXCJuZXR3b3JrXCI6IFwid3NcIixcclxuICAgICAgICBcIndzU2V0dGluZ3NcIjoge1xyXG4gICAgICAgICAgXCJwYXRoXCI6IFwiXC8/ZWQ9MjU2MFwiLFxyXG4gICAgICAgICAgXCJoZWFkZXJzXCI6IHtcclxuICAgICAgICAgICAgXCJIb3N0XCI6IFwid3d3LlNwZUVEdEVzdC5uZXQuSXIuY29tLlNJVGUuWG4tLWZoUTBMQTQ0N2FhYzU1MDRkRUE3MDFhWHIxZy5HMS5LT1JEQS5TYlMuXCJcclxuICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIFwic29ja29wdFwiOiB7XHJcbiAgICAgICAgICBcImRpYWxlclByb3h5XCI6IFwiZnJhZ21lbnRcIixcclxuICAgICAgICAgIFwidGNwS2VlcEFsaXZlSWRsZVwiOiAxMDAsXHJcbiAgICAgICAgICBcIm1hcmtcIjogMjU1LFxyXG4gICAgICAgICAgXCJ0Y3BOb0RlbGF5XCI6IHRydWVcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIFwibXV4XCI6IHtcclxuICAgICAgICBcImVuYWJsZWRcIjogdHJ1ZSxcclxuICAgICAgICBcImNvbmN1cnJlbmN5XCI6IDgsXHJcbiAgICAgICAgXCJ4dWRwQ29uY3VycmVuY3lcIjogOCxcclxuICAgICAgICBcInh1ZHBQcm94eVVEUDQ0M1wiOiBcInJlamVjdFwiXHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIFwidGFnXCI6IFwiZnJhZ21lbnRcIixcclxuICAgICAgXCJwcm90b2NvbFwiOiBcImZyZWVkb21cIixcclxuICAgICAgXCJzZXR0aW5nc1wiOiB7XHJcbiAgICAgICAgXCJkb21haW5TdHJhdGVneVwiOiBcIkFzSXNcIixcclxuICAgICAgICBcImZyYWdtZW50XCI6IHtcclxuICAgICAgICAgIFwicGFja2V0c1wiOiBcIjEtMVwiLFxyXG4gICAgICAgICAgXCJsZW5ndGhcIjogXCIxLTNcIixcclxuICAgICAgICAgIFwiaW50ZXJ2YWxcIjogXCI1XCJcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIFwic3RyZWFtU2V0dGluZ3NcIjoge1xyXG4gICAgICAgIFwic29ja29wdFwiOiB7XHJcbiAgICAgICAgICBcInRjcE5vRGVsYXlcIjogdHJ1ZSxcclxuICAgICAgICAgIFwidGNwS2VlcEFsaXZlSWRsZVwiOiAxMDBcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIFwidGFnXCI6IFwiZGlyZWN0XCIsXHJcbiAgICAgIFwicHJvdG9jb2xcIjogXCJmcmVlZG9tXCIsXHJcbiAgICAgIFwic2V0dGluZ3NcIjoge31cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIFwidGFnXCI6IFwiYmxvY2tcIixcclxuICAgICAgXCJwcm90b2NvbFwiOiBcImJsYWNraG9sZVwiLFxyXG4gICAgICBcInNldHRpbmdzXCI6IHtcclxuICAgICAgICBcInJlc3BvbnNlXCI6IHtcclxuICAgICAgICAgIFwidHlwZVwiOiBcImh0dHBcIlxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIF0sXHJcbiAgXCJyb3V0aW5nXCI6IHtcclxuICAgIFwiZG9tYWluU3RyYXRlZ3lcIjogXCJBc0lzXCIsXHJcbiAgICBcInJ1bGVzXCI6IFtcclxuICAgICAge1xyXG4gICAgICAgIFwidHlwZVwiOiBcImZpZWxkXCIsXHJcbiAgICAgICAgXCJpbmJvdW5kVGFnXCI6IFtcclxuICAgICAgICAgIFwiYXBpXCJcclxuICAgICAgICBdLFxyXG4gICAgICAgIFwib3V0Ym91bmRUYWdcIjogXCJhcGlcIixcclxuICAgICAgICBcImVuYWJsZWRcIjogdHJ1ZVxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgXCJpZFwiOiBcIjU2Mjc3ODU2NTk2NTU3OTk3NTlcIixcclxuICAgICAgICBcInR5cGVcIjogXCJmaWVsZFwiLFxyXG4gICAgICAgIFwicG9ydFwiOiBcIjAtNjU1MzVcIixcclxuICAgICAgICBcIm91dGJvdW5kVGFnXCI6IFwicHJveHlcIixcclxuICAgICAgICBcImVuYWJsZWRcIjogdHJ1ZVxyXG4gICAgICB9XHJcbiAgICBdXHJcbiAgfVxyXG59In0seyJmbGFnIjoiZnIiLCJkYXRhIjoidHJvamFuOlwvXC90ZWxlZ3JhbS1pZC1wcml2YXRldnBuc0AxMy4zOC4xNzAuMTc4OjIyMjIyP3NlY3VyaXR5PXRscyZhbHBuPWh0dHBcLzEuMSZoZWFkZXJUeXBlPW5vbmUmdHlwZT10Y3Amc25pPXRyb2phbi5idXJnZXJpcC5jby51ayMoUzExNilcdWQ4M2NcdWRkZThcdWQ4M2NcdWRkZjV0Lm1lXC9Qcml2YXRlVlBOc1xyXG5cclxudHJvamFuOlwvXC90ZWxlZ3JhbS1pZC1wcml2YXRldnBuc0AxNS4yMzYuMTI3LjE1NDoyMjIyMj9zZWN1cml0eT10bHMmYWxwbj1odHRwXC8xLjEmaGVhZGVyVHlwZT1ub25lJnR5cGU9dGNwJnNuaT10cm9qYW4uYnVyZ2VyaXAuY28udWsjKFMxMTUpXHVkODNjXHVkZGU4XHVkODNjXHVkZGY1dC5tZVwvUHJpdmF0ZVZQTnMifSx7ImZsYWciOiJmciIsImRhdGEiOiJ2bGVzczpcL1wvNGZiZDQ3MjktNWVmYi00NjEyLTk2YTYtZGViNjQ4ZjFlNGExQHd3dy5zcGVlZHRlc3QubmV0OjgwP3R5cGU9d3MmcGF0aD0lMkYlM0ZlZCUzRDIwNDgmaG9zdD13d3cuc3BlZWR0ZXN0Lm5ldC5pci5Db20uU2l0ZS54bi0tZmhxMGxhNDQ3YWFjNTUwNGRlYTcwMWF4cjFnLmYxLmtvcmRhLlBJQ1MuJnNlY3VyaXR5PW5vbmUjZjEifSx7ImZsYWciOiJkZSIsImRhdGEiOiJ0cm9qYW46XC9cL3RlbGVncmFtLWlkLXByaXZhdGV2cG5zQDMuMTI0LjUzLjExNzoyMjIyMj9zZWN1cml0eT10bHMmYWxwbj1odHRwXC8xLjEmaGVhZGVyVHlwZT1ub25lJnR5cGU9dGNwJnNuaT10cm9qYW4uYnVyZ2VyaXAuY28udWsjKFMxMTQpXHVkODNjXHVkZGU5XHVkODNjXHVkZGVhdC5tZVwvUHJpdmF0ZVZQTnNcclxuXHJcbnRyb2phbjpcL1wvdGVsZWdyYW0taWQtcHJpdmF0ZXZwbnNAMy43NC4xMTIuMjU0OjIyMjIyP3NlY3VyaXR5PXRscyZhbHBuPWh0dHBcLzEuMSZoZWFkZXJUeXBlPW5vbmUmdHlwZT10Y3Amc25pPXRyb2phbi5idXJnZXJpcC5jby51ayMoUzExMylcdWQ4M2NcdWRkZTlcdWQ4M2NcdWRkZWF0Lm1lXC9Qcml2YXRlVlBOcyJ9LHsiZmxhZyI6InN3IiwiZGF0YSI6InRyb2phbjpcL1wvdGVsZWdyYW0taWQtcHJpdmF0ZXZwbnNAMTYuMTYuMTYzLjE1MjoyMjIyMj9zZWN1cml0eT10bHMmYWxwbj1odHRwXC8xLjEmaGVhZGVyVHlwZT1ub25lJnR5cGU9dGNwJnNuaT10cm9qYW4uYnVyZ2VyaXAuY28udWsjKFMxMTEpXHVkODNjXHVkZGY4XHVkODNjXHVkZGVhdC5tZVwvUHJpdmF0ZVZQTnNcclxuXHJcbnRyb2phbjpcL1wvdGVsZWdyYW0taWQtcHJpdmF0ZXZwbnNAMTMuNDguMTI1LjEyMzoyMjIyMj9zZWN1cml0eT10bHMmYWxwbj1odHRwXC8xLjEmaGVhZGVyVHlwZT1ub25lJnR5cGU9dGNwJnNuaT10cm9qYW4uYnVyZ2VyaXAuY28udWsjKFMxMTIpXHVkODNjXHVkZGY4XHVkODNjXHVkZGVhdC5tZVwvUHJpdmF0ZVZQTnMifV0="
}
